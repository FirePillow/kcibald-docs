{
  "openapi": "3.0.0",
  "info": {
    "description": "Kcibald API",
    "version": "0.0.1",
    "title": "Kcibald API",
    "contact": {
      "name": "wusatosi"
    }
  },
  "tags": [
    {
      "name": "stable",
      "description": "The api is stable and will likely not change"
    },
    {
      "name": "developing",
      "description": "The api is unstable and may change"
    },
    {
      "name": "general",
      "description": "General request / query"
    },
    {
      "name": "regional",
      "description": "Regional request / query"
    },
    {
      "name": "post",
      "description": "Post related request / query"
    },
    {
      "name": "comment",
      "description": "Comment related request / query"
    },
    {
      "name": "user"
    }
  ],
  "x-tagGroups": [
    {
      "name": "feed",
      "tags": [
        "general",
        "regional",
        "post",
        "comment"
      ]
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "login",
        "parameters": [],
        "tags": [
          "general",
          "developing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "string",
                    "format": "email",
                    "example": "12345@kcisec.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "x2YE7LJMOR",
                    "pattern": "^(?=.*?[a-z])(?=.*?[0-9]).{8,20}$",
                    "minLength": 6,
                    "description": "plain text password"
                  },
                  "captcha": {
                    "type": "string",
                    "description": "google recaptcha validation token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "login success, may continue"
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "description": "Authorization failure",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "PASSWORD_USERNAME_INCORRECT",
                        "FAILED_CAPTCHA_VALIDATION"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "enum": [
                    "FormBased"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User banned",
            "content": {
              "application/json": {
                "schema": {
                  "description": "user banned",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "USER_BANNED"
                      ]
                    },
                    "banned_type": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "enum": [
                            "ALL"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "example": "due to use of word \"FUCK\" in public regions",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "logout",
        "tags": [
          "general"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          }
        }
      }
    },
    "/feed": {
      "get": {
        "tags": [
          "general",
          "developing"
        ],
        "summary": "fetch feed",
        "description": "fetch new activities from all subscribed regions",
        "parameters": [
          {
            "$ref": "#/components/parameters/query_mark"
          },
          {
            "$ref": "#/components/parameters/amount"
          }
        ],
        "responses": {
          "200": {
            "description": "fetch success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "properties": {
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/post_head"
                              },
                              {
                                "properties": {
                                  "region": {
                                    "type": "string",
                                    "example": "ib-office",
                                    "description": "region of the post"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "mark": {
                          "$ref": "#/components/schemas/query_mark"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      }
    },
    "/r/{region}/": {
      "parameters": [
        {
          "in": "path",
          "name": "region",
          "required": true,
          "allowEmptyValue": false,
          "schema": {
            "type": "string",
            "anyOf": [
              {
                "type": "string",
                "example": "ib-office",
                "description": "this is the region NAME of the post<br>Example: ib-office"
              },
              {
                "type": "string",
                "example": "DP/resources",
                "pattern": "parent_region/child_region",
                "description": "the child region name under the parent region, depth can only be two at maximum, means parent_region/child_region/sub_region or deeper directory is not allowed<br>Example:DP/resources"
              }
            ]
          }
        }
      ],
      "get": {
        "description": "Example url: /r/ib-office or /r/DP/resources",
        "tags": [
          "regional",
          "developing"
        ],
        "summary": "list regional information",
        "operationId": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "$ref": "#/components/schemas/region"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      }
    },
    "/r/{region}/p/": {
      "parameters": [
        {
          "in": "path",
          "name": "region",
          "required": true,
          "allowEmptyValue": false,
          "schema": {
            "type": "string",
            "anyOf": [
              {
                "type": "string",
                "example": "ib-office",
                "description": "this is the region NAME of the post<br>Example: ib-office"
              },
              {
                "type": "string",
                "example": "DP/resources",
                "pattern": "parent_region/child_region",
                "description": "the child region name under the parent region, depth can only be two at maximum, means parent_region/child_region/sub_region or deeper directory is not allowed<br>Example:DP/resources"
              }
            ]
          }
        }
      ],
      "get": {
        "description": "Example url: /r/ib-office/posts",
        "summary": "list posts under region",
        "tags": [
          "post",
          "developing"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/query_mark"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/amount"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "posts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/post_head"
                          }
                        },
                        "query_mark": {
                          "$ref": "#/components/schemas/query_mark"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      },
      "put": {
        "description": "Example url: /r/ib-office/posts",
        "summary": "create post",
        "tags": [
          "post",
          "developing"
        ],
        "operationId": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "How to get a 7 in math HL"
                  },
                  "content": {
                    "type": "string",
                    "example": "it's impossible"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "upload_token": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "link": {
                      "type": "string",
                      "example": "www.kcibald.com/r/ib-office/akdadak",
                      "description": "the link to created post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      }
    },
    "/r/{region}/p/{postId}{any}/": {
      "parameters": [
        {
          "in": "path",
          "name": "region",
          "schema": {
            "anyOf": [
              {
                "type": "string",
                "example": "ib-office",
                "description": "this is the region NAME of the post<br>Example: ib-office"
              },
              {
                "type": "string",
                "example": "DP/resources",
                "pattern": "parent_region/child_region",
                "description": "the child region name under the parent region, depth can only be two at maximum, means parent_region/child_region/sub_region or deeper directory is not allowed<br>Example:DP/resources"
              }
            ]
          }
        },
        {
          "in": "path",
          "name": "postId",
          "schema": {
            "type": "string",
            "example": "AXPYAOfpEi"
          }
        },
        {
          "in": "path",
          "name": "any",
          "allowEmptyValue": true,
          "schema": {
            "pattern": "-ANYTHING",
            "description": "Server will ignore content in this section, this is meant to help url to be human readable<br>If this parameter is provided, it should start with character '-'<br>Do mind it need to be compatible with url theme, and prevent using character '/'",
            "example": "-how-to-get-seven-in-math-HL"
          }
        }
      ],
      "get": {
        "description": "Example request: /r/ib-office/AXPYAOfpEi-why-not-to-choice-physics-HL/<br>Which is equivalent to /r/ib-office/AXPYAOfpEi/",
        "summary": "get post",
        "tags": [
          "post",
          "developing"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      },
      "delete": {
        "tags": [
          "post",
          "developing"
        ],
        "summary": "delete post",
        "description": "Example request: /r/ib-office/AXPYAOfpEi-why-not-to-choice-physics-HL/<br>Which is equivalent to /r/ib-office/AXPYAOfpEi/<br>Only the creator of the poster or administer of the region is capable for deleting posts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "deletion success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/post_head"
                        },
                        {
                          "description": "post deleted"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      }
    },
    "/r/{region}/p/{postId}{any}/comments": {
      "parameters": [
        {
          "in": "path",
          "name": "region",
          "schema": {
            "anyOf": [
              {
                "type": "string",
                "example": "ib-office",
                "description": "this is the region NAME of the post<br>Example: ib-office"
              },
              {
                "type": "string",
                "example": "DP/resources",
                "pattern": "parent_region/child_region",
                "description": "the child region name under the parent region, depth can only be two at maximum, means parent_region/child_region/sub_region or deeper directory is not allowed<br>Example:DP/resources"
              }
            ]
          }
        },
        {
          "in": "path",
          "name": "postId",
          "schema": {
            "type": "string",
            "example": "AXPYAOfpEi"
          }
        },
        {
          "in": "path",
          "name": "any",
          "allowEmptyValue": true,
          "schema": {
            "pattern": "-ANYTHING",
            "description": "Server will ignore content in this section, this is meant to help url to be human readable<br>If this parameter is provided, it should start with character '-'<br>Do mind it need to be compatible with url theme, and prevent using character '/'",
            "example": "-how-to-get-seven-in-math-HL"
          }
        }
      ],
      "get": {
        "summary": "get comments under post",
        "tags": [
          "comment",
          "developing"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/query_mark"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/amount"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "properties": {
                        "comments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/comment"
                          }
                        },
                        "query_mark": {
                          "$ref": "#/components/schemas/query_mark"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          },
          "401": {
            "$ref": "#/components/responses/no_authorization"
          },
          "403": {
            "$ref": "#/components/responses/common_auth"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "500": {
            "$ref": "#/components/responses/server_failure"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "query_mark": {
        "in": "query",
        "name": "after",
        "description": "fetch activities after a post identified using an special id for paging, this will be provided upon query",
        "schema": {
          "$ref": "#/components/schemas/query_mark"
        }
      },
      "amount": {
        "in": "query",
        "name": "amount",
        "description": "maximum number of activities to return",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "required": "false"
        }
      },
      "skip": {
        "name": "skip",
        "in": "query",
        "description": "skip number of objects, this will be ignored if \"after\" query mark is present",
        "schema": {
          "type": "integer",
          "example": 10
        }
      }
    },
    "schemas": {
      "region": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ib-office"
          },
          "region_id": {
            "type": "string",
            "example": "dkjkaljfd"
          },
          "description": {
            "type": "string",
            "example": "region for ib office to post annunciation"
          },
          "avatar": {
            "type": "string",
            "example": "usercontent.kcibald.com/jalkdjkajfdlk.jpeg"
          },
          "top_posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/post_head"
            },
            "maxItems": "20"
          },
          "post_mark": {
            "$ref": "#/components/schemas/query_mark"
          }
        }
      },
      "post_head": {
        "type": "object",
        "description": "represents a minimized post object, containing only the main body without comments",
        "properties": {
          "title": {
            "type": "string",
            "example": "why not to choice physics HL"
          },
          "post_id": {
            "type": "string",
            "example": "AXPYAOfpEi"
          },
          "author": {
            "$ref": "#/components/schemas/user"
          },
          "create_time_stamp": {
            "$ref": "#/components/schemas/create_timestamp"
          },
          "update_time_stamp": {
            "$ref": "#/components/schemas/update_timestamp"
          },
          "content": {
            "type": "string",
            "example": "lalala"
          },
          "comment_count": {
            "type": "integer",
            "example": 50
          }
        }
      },
      "post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "why not to choice physics HL"
          },
          "post_id": {
            "type": "string",
            "example": "AXPYAOfpEi"
          },
          "comments": {
            "type": "array",
            "required": "true",
            "items": {
              "$ref": "#/components/schemas/comment"
            },
            "maxItems": 20
          },
          "comment_count": {
            "type": "integer",
            "example": 50
          },
          "comment_query_mark": {
            "description": "use for paging comments, null if reached to the end",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/query_mark"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/content_base"
          }
        ]
      },
      "user": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "example": "r8hpppZ6mK"
          },
          "user_name": {
            "type": "string",
            "maxLength": "50",
            "example": "james"
          },
          "signature": {
            "type": "string",
            "example": "I love physics",
            "description": "user signature, can not be an HTML element"
          },
          "avatar": {
            "type": "string",
            "example": "avatars.kcibald.com/hRkynUoTzP",
            "description": "url for avatar file"
          }
        }
      },
      "comment": {
        "type": "object",
        "properties": {
          "author": {
            "$ref": "#/components/schemas/user"
          },
          "create_time_stamp": {
            "$ref": "#/components/schemas/create_timestamp"
          },
          "update_time_stamp": {
            "$ref": "#/components/schemas/update_timestamp"
          },
          "content": {
            "type": "string",
            "example": "this is good"
          },
          "replies": {
            "$ref": "#/components/schemas/comment"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attachment"
            }
          }
        }
      },
      "content_base": {
        "properties": {
          "author": {
            "$ref": "#/components/schemas/user"
          },
          "create_time_stamp": {
            "$ref": "#/components/schemas/create_timestamp"
          },
          "update_time_stamp": {
            "$ref": "#/components/schemas/update_timestamp"
          },
          "content": {
            "type": "string",
            "example": "lalala"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attachment"
            }
          }
        }
      },
      "attachment": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "something",
            "description": "title of the attachment"
          },
          "link": {
            "type": "string",
            "example": "usercontent.kcibald/abcdefg.jpeg",
            "description": "url link of the attachment"
          }
        }
      },
      "create_timestamp": {
        "type": "integer",
        "format": "int64",
        "example": "1554806142"
      },
      "update_timestamp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/create_timestamp"
          }
        ],
        "example": "1554806142",
        "nullable": true
      },
      "query_mark": {
        "type": "string",
        "description": "meant to be an identifier to mark the position of post listed, a tool for paging",
        "format": "hexadecimal",
        "minLength": "24",
        "maxLength": "24",
        "required": "false",
        "example": "5c7fc05f802b95782f1f9e88"
      }
    },
    "responses": {
      "bad_request": {
        "description": "Bad request"
      },
      "common_auth": {
        "description": "Standard authorization failure",
        "content": {
          "application/json": {
            "schema": {
              "anyOf": [
                {
                  "description": "denied",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "AUTHORIZATION_DENIED"
                      ]
                    }
                  }
                },
                {
                  "description": "user banned",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "USER_BANNED"
                      ]
                    },
                    "banned_type": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "enum": [
                            "CURRENT",
                            "ALL"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "example": "due to use of word \"FUCK\" in public regions",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "no_authorization": {
        "description": "No authorization or authorization expired",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "AUTHORIZATION_MISSING",
                    "AUTHORIZATION_EXPIRED"
                  ]
                }
              }
            }
          }
        },
        "headers": {
          "WWW-Authenticate": {
            "schema": {
              "enum": [
                "FormBased"
              ]
            }
          }
        }
      },
      "not_found": {
        "description": "requested information not found",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "NOT_FOUND"
                  ]
                }
              }
            }
          }
        }
      },
      "server_failure": {
        "description": "Internal Error",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "enum": [
                    false
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "INTERNAL_ERROR"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}